let S = 20

var paths = [] // TODO var paths = new Array<int>(20) ?
paths.fill(0, 21)

let walk = function(x, y) {
	if (x + y == S) {
		paths[y]++
		return
	}
	if (x > 0) walk(x - 1, y)
	if (y > 0) walk(x, y - 1)
	return // TODO useless return here, but prevents a leak
}

walk(S, S)

var sum = 1l
for (var i = 0; i < S; ++i) {
	var long = (0l + paths[i]) * paths[i]
	sum += long
}
return sum
